this is the style one for user home page 
css:
.user-homepage-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 20px;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  padding: 10px 20px;
  /* box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); */
}

.logo {
  width: 180px;
}

.website-info {
  flex: 1;
  text-align: center;
}

.website-name,
.website-description {
  margin: 0;
  display: block;
}

.website-name {
  font-size: 38px;
  font-family: "Audiowide";
  color: rgba(148, 205, 198, 255);
  margin-bottom: 10px;
}

.website-description {
  font-size: 18px;
  color: rgba(148, 205, 198, 255);
}

.user-info {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-right: 40px;
}

.user-image {
  width: 80px;
  height: 80px;
  border-radius: 50%;
  margin-bottom: 5px;
}

.user-name {
  margin: 5px;
  font-size: 16px;
  font-weight: bold;
  color: white;
}

.profile-button {
  padding: 5px 10px;
  border: none;
  background-color: rgba(148, 205, 198, 255);
  color: black;
  font-size: 14px;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s ease;
  margin: 5px;
}

.profile-button:hover {
  background-color: #00a88b;
}

.left-side,
.right-side {
  display: flex;
  width: 80%;
  padding: 20px;
}

.left-side {
  width: 80%;
  align-items: center;
  justify-content: center;
}

/* New styles for the form on the left side */
.programming-area-form {
  display: flex;
  flex-direction: column;
  align-items: flex-start;

  padding: 20px;
  border-radius: 10px;

  color: rgba(148, 205, 198, 255);
  width: 60%;
}

.programming-area-form label,
.programming-area-form p {
  font-size: 30px;
  margin-bottom: 10px;
  font-family: "Audiowide";
}

.programming-area-form input[type="text"] {
  width: 50%;
  padding: 10px;
  margin-bottom: 20px;
  border-radius: 5px;
  border: 1px solid #ccc;
}

.checkbox-group {
  display: flex;
  flex-direction: column;
  margin-bottom: 20px;
}

.checkbox-group label {
  font-size: 18px;
  margin-bottom: 5px;
  display: flex;
  align-items: center;
}

.checkbox-group input[type="checkbox"] {
  margin-right: 10px;
}

.create-button {
  padding: 10px;
  border: none;
  background-color: rgba(148, 205, 198, 255);
  color: #fff;
  font-size: 16px;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.create-button:hover {
  background-color: #00a88b;
}

.react-select__control {
    border: 1px solid var(--input-border-color); /* Use the default border color */
    border-radius: 5px;
    padding: 5px;
    transition: border-color 0.3s ease;
  }
  
  .react-select__control--is-focused {
    border-color: var(--input-border-color-focus); /* Change border color on focus */
    box-shadow: none; /* Remove default shadow */
  }
  
@media (max-width: 768px) {
  .header {
    flex-direction: column;
  }

  .content-container {
    flex-direction: column;
  }

  .left-side,
  .right-side {
    width: 100%;
  }
}
 ......................................................
 page : 
 import React, { useState } from "react";
import { Link } from "react-router-dom";
import logo from "../images/logo.png";
import userImage from "../images/userpic.png"; // Make sure to replace with the actual path to the user's image
import "../style/UserHomepage.css";

const languageOptions = [
    { value: "cPlus", label: "C+" },
    { value: "java", label: "Java" },
    { value: "python", label: "Python" },
  ];

export default function UserHomepage() {
  const [areaName, setAreaName] = useState("");
  const [languages, setLanguages] = useState({
    cPlus: false,
    java: false,
    python: false,
  });

  const handleLanguageChange = (language) => {
    setLanguages({
      ...languages,
      [language]: !languages[language],
    });
  };

  return (
    <div>
      <div className="user-homepage-container">
        {/* for the top */}
        <div className="header">
          <img className="logo" alt="logo" src={logo} />
          <div className="website-info">
            <h1 className="website-name">Welcome to Reshi Code website !!</h1>
            <p className="website-description">
              Experience Real-Time Collaboration with Expert Programmers
              <br />
              Instantly Resolve Code Errors and Enhance Your Projects with Live
              Assistance
            </p>
          </div>
          <div className="user-info">
            <img className="user-image" alt="user" src={userImage} />
            <p className="user-name">User Name</p>
            <button className="profile-button">Go to Profile</button>
            <button className="profile-button">Log out</button>
          </div>
        </div>
      </div>
      <div className="content-container">
        {/* for the left side */}
        <div className="left-side">
          <form className="programming-area-form">
            <label htmlFor="area-name">Enter programming area name:</label>
            <input
              type="text"
              id="area-name"
              value={areaName}
              onChange={(e) => setAreaName(e.target.value)}
              placeholder="programming area name"
            />

            <p>Choose programming languages:</p>
            <div className="checkbox-group">
              <label>
                <input
                  type="checkbox"
                  checked={languages.cPlus}
                  value="1"
                  onChange={() => handleLanguageChange("cPlus")}
                />
                C+
              </label>
              <label>
                <input
                  type="checkbox"
                  checked={languages.java}
                  onChange={() => handleLanguageChange("java")}
                />
                Java
              </label>
              <label>
                <input
                  type="checkbox"
                  checked={languages.python}
                  onChange={() => handleLanguageChange("python")}
                />
                Python
              </label>
            </div>

            <button type="button" className="create-button">
              Create programming area
            </button>
          </form>
        </div>

        {/* for the right side */}
        <div className="right-side">{/* Right side content goes here */}</div>
      </div>
    </div>
  );
}
.............................................................................................................
this for pro profile input 
/* Container for the entire profile page */
body,
html {
  margin: 0;
  padding: 0;
  font-family: Arial, sans-serif;
  height: 100%;
  overflow-x: hidden; /* Prevent horizontal scrolling */
  overflow-y: auto; /* Allow vertical scrolling */
}

.pro-prof-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start; /* Align items to the top */
  min-height: 100vh;
  padding-top: 20px; /* Add some space from the top */
}

/* Card containing the profile details */
.pro-prof-card {
  background-color: #ffffff;
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  padding: 20px;
  width: 95%;
  max-width: 600px;
  text-align: left; /* Align text to the left */
  box-sizing: border-box;
  margin: 10px;
}

/* Profile picture styling */
.pro-prof-picture {
  width: 150px;
  height: 150px;
  border-radius: 50%;
  object-fit: cover;
  display: block;
  margin: 0 auto 20px auto;
}

/* File input for profile image */
.pro-prof-file-input {
  margin-top: 10px;
  display: block;
  margin: 10px auto;
}

/* Container for user details */
.pro-prof-details {
  margin-top: 20px;
}

/* Flex container for each detail item */
.pro-prof-detail {
  margin: 20px 0;
  display: flex;
  align-items: center;
}

/* Label styling for detail items */
.pro-prof-detail-label {
  font-size: 22px;
  margin-right: 10px; /* Adjust the margin between label and text */
  width: 120px; /* Set a fixed width for labels to align inputs */
  flex-shrink: 0; /* Prevent label from shrinking */
}

/* Text styling for detail items */
.pro-prof-detail-text {
  font-size: 22px;
  display: flex;
  align-items: center; /* Align label and input horizontally */
  justify-content: flex-start; /* Align items to the top */
}

/* Styling for input fields */
.pro-prof-input {
  padding: 10px;
  border: 1px solid #ddd;
  border-radius: 5px;
  font-size: 18px;
  width: calc(100% - 130px); /* Adjust width to account for label width and margin */
  box-sizing: border-box; /* Include padding and border in element's total width */
}

/* Styling for phone input component */
.pro-prof-phone-input {
  width: 100%; /* Match width with other inputs */
  padding: 10px;
  border: 1px solid #ddd;
  border-radius: 5px;
  font-size: 18px;
  box-sizing: border-box; /* Include padding and border in element's total width */
}

/* Styling for Select component */
.pro-prof-select .react-select__control {
  width: 100%;
  border: 1px solid #ddd;
  border-radius: 5px;
  padding: 5px;
  font-size: 18px;
  box-sizing: border-box; /* Include padding and border in element's total width */
}

/* Styling for focused state of Select component */
.pro-prof-select .react-select__control--is-focused {
  border-color: #007bff; /* Change border color on focus */
  box-shadow: none; /* Remove default shadow */
}

/* Container for buttons */
.pro-prof-buttons {
  margin-top: 20px;
  display: flex;
  justify-content: space-between;
}

/* Styling for buttons */
.pro-prof-button {
  padding: 10px 20px;
  border: none;
  border-radius: 5px;
  font-size: 16px;
  cursor: pointer;
  transition: background-color 0.3s, color 0.3s;
}

/* Specific styling for Save button */
.pro-prof-save-button {
  background-color: #28a745;
  color: white;
}

/* Specific styling for Cancel button */
.pro-prof-cancel-button {
  background-color: #dc3545;
  color: white;
}

/* Specific styling for Edit button */
.pro-prof-edit-button {
  background-color: #007bff;
  color: white;
}

/* Specific styling for Delete button */
.pro-prof-delete-button {
    background-color: #dc3545;
    color: white;
}

/* Hover effects for buttons */
.pro-prof-button:hover {
  opacity: 0.9;
  transform: scale(1.05);
}

/* Feedback text */
.pro-prof-feedback {
  font-size: 42px; /* Set a larger font size */
  text-align: center; /* Center the text */
  margin-top: 70px; /* Add some space above the text */
  color: rgba(148, 205, 198, 255); /* Set a color for the text */
  font-family: "Audiowide";
}
